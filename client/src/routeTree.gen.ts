/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedProfileIndexImport } from './routes/_authenticated/profile/index'
import { Route as AuthenticatedPostsIndexImport } from './routes/_authenticated/posts/index'
import { Route as AuthenticatedHomeIndexImport } from './routes/_authenticated/home/index'
import { Route as AuthenticatedAboutIndexImport } from './routes/_authenticated/about/index'
import { Route as authVerifyEmailIndexImport } from './routes/(auth)/verify-email/index'
import { Route as authResetIndexImport } from './routes/(auth)/reset/index'
import { Route as authRegisterIndexImport } from './routes/(auth)/register/index'
import { Route as authNewPasswordIndexImport } from './routes/(auth)/new-password/index'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedProfileIndexRoute = AuthenticatedProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedPostsIndexRoute = AuthenticatedPostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedHomeIndexRoute = AuthenticatedHomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAboutIndexRoute = AuthenticatedAboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const authVerifyEmailIndexRoute = authVerifyEmailIndexImport.update({
  id: '/(auth)/verify-email/',
  path: '/verify-email/',
  getParentRoute: () => rootRoute,
} as any)

const authResetIndexRoute = authResetIndexImport.update({
  id: '/(auth)/reset/',
  path: '/reset/',
  getParentRoute: () => rootRoute,
} as any)

const authRegisterIndexRoute = authRegisterIndexImport.update({
  id: '/(auth)/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const authNewPasswordIndexRoute = authNewPasswordIndexImport.update({
  id: '/(auth)/new-password/',
  path: '/new-password/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/new-password/': {
      id: '/(auth)/new-password/'
      path: '/new-password'
      fullPath: '/new-password'
      preLoaderRoute: typeof authNewPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register/': {
      id: '/(auth)/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/reset/': {
      id: '/(auth)/reset/'
      path: '/reset'
      fullPath: '/reset'
      preLoaderRoute: typeof authResetIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/verify-email/': {
      id: '/(auth)/verify-email/'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof authVerifyEmailIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/about/': {
      id: '/_authenticated/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthenticatedAboutIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/home/': {
      id: '/_authenticated/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/posts/': {
      id: '/_authenticated/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof AuthenticatedPostsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile/': {
      id: '/_authenticated/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedAboutIndexRoute: typeof AuthenticatedAboutIndexRoute
  AuthenticatedHomeIndexRoute: typeof AuthenticatedHomeIndexRoute
  AuthenticatedPostsIndexRoute: typeof AuthenticatedPostsIndexRoute
  AuthenticatedProfileIndexRoute: typeof AuthenticatedProfileIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAboutIndexRoute: AuthenticatedAboutIndexRoute,
  AuthenticatedHomeIndexRoute: AuthenticatedHomeIndexRoute,
  AuthenticatedPostsIndexRoute: AuthenticatedPostsIndexRoute,
  AuthenticatedProfileIndexRoute: AuthenticatedProfileIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/new-password': typeof authNewPasswordIndexRoute
  '/register': typeof authRegisterIndexRoute
  '/reset': typeof authResetIndexRoute
  '/verify-email': typeof authVerifyEmailIndexRoute
  '/about': typeof AuthenticatedAboutIndexRoute
  '/home': typeof AuthenticatedHomeIndexRoute
  '/posts': typeof AuthenticatedPostsIndexRoute
  '/profile': typeof AuthenticatedProfileIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/new-password': typeof authNewPasswordIndexRoute
  '/register': typeof authRegisterIndexRoute
  '/reset': typeof authResetIndexRoute
  '/verify-email': typeof authVerifyEmailIndexRoute
  '/about': typeof AuthenticatedAboutIndexRoute
  '/home': typeof AuthenticatedHomeIndexRoute
  '/posts': typeof AuthenticatedPostsIndexRoute
  '/profile': typeof AuthenticatedProfileIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/(auth)/new-password/': typeof authNewPasswordIndexRoute
  '/(auth)/register/': typeof authRegisterIndexRoute
  '/(auth)/reset/': typeof authResetIndexRoute
  '/(auth)/verify-email/': typeof authVerifyEmailIndexRoute
  '/_authenticated/about/': typeof AuthenticatedAboutIndexRoute
  '/_authenticated/home/': typeof AuthenticatedHomeIndexRoute
  '/_authenticated/posts/': typeof AuthenticatedPostsIndexRoute
  '/_authenticated/profile/': typeof AuthenticatedProfileIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/new-password'
    | '/register'
    | '/reset'
    | '/verify-email'
    | '/about'
    | '/home'
    | '/posts'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/new-password'
    | '/register'
    | '/reset'
    | '/verify-email'
    | '/about'
    | '/home'
    | '/posts'
    | '/profile'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/(auth)/new-password/'
    | '/(auth)/register/'
    | '/(auth)/reset/'
    | '/(auth)/verify-email/'
    | '/_authenticated/about/'
    | '/_authenticated/home/'
    | '/_authenticated/posts/'
    | '/_authenticated/profile/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  authNewPasswordIndexRoute: typeof authNewPasswordIndexRoute
  authRegisterIndexRoute: typeof authRegisterIndexRoute
  authResetIndexRoute: typeof authResetIndexRoute
  authVerifyEmailIndexRoute: typeof authVerifyEmailIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  authNewPasswordIndexRoute: authNewPasswordIndexRoute,
  authRegisterIndexRoute: authRegisterIndexRoute,
  authResetIndexRoute: authResetIndexRoute,
  authVerifyEmailIndexRoute: authVerifyEmailIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/login",
        "/(auth)/new-password/",
        "/(auth)/register/",
        "/(auth)/reset/",
        "/(auth)/verify-email/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/about/",
        "/_authenticated/home/",
        "/_authenticated/posts/",
        "/_authenticated/profile/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/(auth)/new-password/": {
      "filePath": "(auth)/new-password/index.tsx"
    },
    "/(auth)/register/": {
      "filePath": "(auth)/register/index.tsx"
    },
    "/(auth)/reset/": {
      "filePath": "(auth)/reset/index.tsx"
    },
    "/(auth)/verify-email/": {
      "filePath": "(auth)/verify-email/index.tsx"
    },
    "/_authenticated/about/": {
      "filePath": "_authenticated/about/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/home/": {
      "filePath": "_authenticated/home/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/posts/": {
      "filePath": "_authenticated/posts/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/profile/": {
      "filePath": "_authenticated/profile/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
