/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedHomeIndexImport } from './routes/_authenticated/home/index'
import { Route as AuthenticatedUsernameIndexImport } from './routes/_authenticated/$username/index'
import { Route as authVerifyEmailIndexImport } from './routes/(auth)/verify-email/index'
import { Route as authResetIndexImport } from './routes/(auth)/reset/index'
import { Route as authRegisterIndexImport } from './routes/(auth)/register/index'
import { Route as authNewPasswordIndexImport } from './routes/(auth)/new-password/index'
import { Route as AuthenticatedUsernameLayoutImport } from './routes/_authenticated/$username/_layout'
import { Route as AuthenticatedUsernameEditIndexImport } from './routes/_authenticated/$username/edit/index'
import { Route as AuthenticatedUsernameAddIndexImport } from './routes/_authenticated/$username/add/index'
import { Route as AuthenticatedUsernameLayoutPostsIndexImport } from './routes/_authenticated/$username/_layout/posts/index'
import { Route as AuthenticatedUsernameLayoutMediaIndexImport } from './routes/_authenticated/$username/_layout/media/index'

// Create Virtual Routes

const AuthenticatedUsernameImport = createFileRoute(
  '/_authenticated/$username',
)()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsernameRoute = AuthenticatedUsernameImport.update({
  id: '/$username',
  path: '/$username',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedHomeIndexRoute = AuthenticatedHomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedUsernameIndexRoute = AuthenticatedUsernameIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedUsernameRoute,
  } as any,
)

const authVerifyEmailIndexRoute = authVerifyEmailIndexImport.update({
  id: '/(auth)/verify-email/',
  path: '/verify-email/',
  getParentRoute: () => rootRoute,
} as any)

const authResetIndexRoute = authResetIndexImport.update({
  id: '/(auth)/reset/',
  path: '/reset/',
  getParentRoute: () => rootRoute,
} as any)

const authRegisterIndexRoute = authRegisterIndexImport.update({
  id: '/(auth)/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const authNewPasswordIndexRoute = authNewPasswordIndexImport.update({
  id: '/(auth)/new-password/',
  path: '/new-password/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsernameLayoutRoute =
  AuthenticatedUsernameLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => AuthenticatedUsernameRoute,
  } as any)

const AuthenticatedUsernameEditIndexRoute =
  AuthenticatedUsernameEditIndexImport.update({
    id: '/edit/',
    path: '/edit/',
    getParentRoute: () => AuthenticatedUsernameRoute,
  } as any)

const AuthenticatedUsernameAddIndexRoute =
  AuthenticatedUsernameAddIndexImport.update({
    id: '/add/',
    path: '/add/',
    getParentRoute: () => AuthenticatedUsernameRoute,
  } as any)

const AuthenticatedUsernameLayoutPostsIndexRoute =
  AuthenticatedUsernameLayoutPostsIndexImport.update({
    id: '/posts/',
    path: '/posts/',
    getParentRoute: () => AuthenticatedUsernameLayoutRoute,
  } as any)

const AuthenticatedUsernameLayoutMediaIndexRoute =
  AuthenticatedUsernameLayoutMediaIndexImport.update({
    id: '/media/',
    path: '/media/',
    getParentRoute: () => AuthenticatedUsernameLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/$username': {
      id: '/_authenticated/$username'
      path: '/$username'
      fullPath: '/$username'
      preLoaderRoute: typeof AuthenticatedUsernameImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/$username/_layout': {
      id: '/_authenticated/$username/_layout'
      path: '/$username'
      fullPath: '/$username'
      preLoaderRoute: typeof AuthenticatedUsernameLayoutImport
      parentRoute: typeof AuthenticatedUsernameRoute
    }
    '/(auth)/new-password/': {
      id: '/(auth)/new-password/'
      path: '/new-password'
      fullPath: '/new-password'
      preLoaderRoute: typeof authNewPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register/': {
      id: '/(auth)/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/reset/': {
      id: '/(auth)/reset/'
      path: '/reset'
      fullPath: '/reset'
      preLoaderRoute: typeof authResetIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/verify-email/': {
      id: '/(auth)/verify-email/'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof authVerifyEmailIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/$username/': {
      id: '/_authenticated/$username/'
      path: '/'
      fullPath: '/$username/'
      preLoaderRoute: typeof AuthenticatedUsernameIndexImport
      parentRoute: typeof AuthenticatedUsernameImport
    }
    '/_authenticated/home/': {
      id: '/_authenticated/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/$username/add/': {
      id: '/_authenticated/$username/add/'
      path: '/add'
      fullPath: '/$username/add'
      preLoaderRoute: typeof AuthenticatedUsernameAddIndexImport
      parentRoute: typeof AuthenticatedUsernameImport
    }
    '/_authenticated/$username/edit/': {
      id: '/_authenticated/$username/edit/'
      path: '/edit'
      fullPath: '/$username/edit'
      preLoaderRoute: typeof AuthenticatedUsernameEditIndexImport
      parentRoute: typeof AuthenticatedUsernameImport
    }
    '/_authenticated/$username/_layout/media/': {
      id: '/_authenticated/$username/_layout/media/'
      path: '/media'
      fullPath: '/$username/media'
      preLoaderRoute: typeof AuthenticatedUsernameLayoutMediaIndexImport
      parentRoute: typeof AuthenticatedUsernameLayoutImport
    }
    '/_authenticated/$username/_layout/posts/': {
      id: '/_authenticated/$username/_layout/posts/'
      path: '/posts'
      fullPath: '/$username/posts'
      preLoaderRoute: typeof AuthenticatedUsernameLayoutPostsIndexImport
      parentRoute: typeof AuthenticatedUsernameLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedUsernameLayoutRouteChildren {
  AuthenticatedUsernameLayoutMediaIndexRoute: typeof AuthenticatedUsernameLayoutMediaIndexRoute
  AuthenticatedUsernameLayoutPostsIndexRoute: typeof AuthenticatedUsernameLayoutPostsIndexRoute
}

const AuthenticatedUsernameLayoutRouteChildren: AuthenticatedUsernameLayoutRouteChildren =
  {
    AuthenticatedUsernameLayoutMediaIndexRoute:
      AuthenticatedUsernameLayoutMediaIndexRoute,
    AuthenticatedUsernameLayoutPostsIndexRoute:
      AuthenticatedUsernameLayoutPostsIndexRoute,
  }

const AuthenticatedUsernameLayoutRouteWithChildren =
  AuthenticatedUsernameLayoutRoute._addFileChildren(
    AuthenticatedUsernameLayoutRouteChildren,
  )

interface AuthenticatedUsernameRouteChildren {
  AuthenticatedUsernameLayoutRoute: typeof AuthenticatedUsernameLayoutRouteWithChildren
  AuthenticatedUsernameIndexRoute: typeof AuthenticatedUsernameIndexRoute
  AuthenticatedUsernameAddIndexRoute: typeof AuthenticatedUsernameAddIndexRoute
  AuthenticatedUsernameEditIndexRoute: typeof AuthenticatedUsernameEditIndexRoute
}

const AuthenticatedUsernameRouteChildren: AuthenticatedUsernameRouteChildren = {
  AuthenticatedUsernameLayoutRoute:
    AuthenticatedUsernameLayoutRouteWithChildren,
  AuthenticatedUsernameIndexRoute: AuthenticatedUsernameIndexRoute,
  AuthenticatedUsernameAddIndexRoute: AuthenticatedUsernameAddIndexRoute,
  AuthenticatedUsernameEditIndexRoute: AuthenticatedUsernameEditIndexRoute,
}

const AuthenticatedUsernameRouteWithChildren =
  AuthenticatedUsernameRoute._addFileChildren(
    AuthenticatedUsernameRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedUsernameRoute: typeof AuthenticatedUsernameRouteWithChildren
  AuthenticatedHomeIndexRoute: typeof AuthenticatedHomeIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedUsernameRoute: AuthenticatedUsernameRouteWithChildren,
  AuthenticatedHomeIndexRoute: AuthenticatedHomeIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/$username': typeof AuthenticatedUsernameLayoutRouteWithChildren
  '/new-password': typeof authNewPasswordIndexRoute
  '/register': typeof authRegisterIndexRoute
  '/reset': typeof authResetIndexRoute
  '/verify-email': typeof authVerifyEmailIndexRoute
  '/$username/': typeof AuthenticatedUsernameIndexRoute
  '/home': typeof AuthenticatedHomeIndexRoute
  '/$username/add': typeof AuthenticatedUsernameAddIndexRoute
  '/$username/edit': typeof AuthenticatedUsernameEditIndexRoute
  '/$username/media': typeof AuthenticatedUsernameLayoutMediaIndexRoute
  '/$username/posts': typeof AuthenticatedUsernameLayoutPostsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/$username': typeof AuthenticatedUsernameIndexRoute
  '/new-password': typeof authNewPasswordIndexRoute
  '/register': typeof authRegisterIndexRoute
  '/reset': typeof authResetIndexRoute
  '/verify-email': typeof authVerifyEmailIndexRoute
  '/home': typeof AuthenticatedHomeIndexRoute
  '/$username/add': typeof AuthenticatedUsernameAddIndexRoute
  '/$username/edit': typeof AuthenticatedUsernameEditIndexRoute
  '/$username/media': typeof AuthenticatedUsernameLayoutMediaIndexRoute
  '/$username/posts': typeof AuthenticatedUsernameLayoutPostsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/$username': typeof AuthenticatedUsernameRouteWithChildren
  '/_authenticated/$username/_layout': typeof AuthenticatedUsernameLayoutRouteWithChildren
  '/(auth)/new-password/': typeof authNewPasswordIndexRoute
  '/(auth)/register/': typeof authRegisterIndexRoute
  '/(auth)/reset/': typeof authResetIndexRoute
  '/(auth)/verify-email/': typeof authVerifyEmailIndexRoute
  '/_authenticated/$username/': typeof AuthenticatedUsernameIndexRoute
  '/_authenticated/home/': typeof AuthenticatedHomeIndexRoute
  '/_authenticated/$username/add/': typeof AuthenticatedUsernameAddIndexRoute
  '/_authenticated/$username/edit/': typeof AuthenticatedUsernameEditIndexRoute
  '/_authenticated/$username/_layout/media/': typeof AuthenticatedUsernameLayoutMediaIndexRoute
  '/_authenticated/$username/_layout/posts/': typeof AuthenticatedUsernameLayoutPostsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/$username'
    | '/new-password'
    | '/register'
    | '/reset'
    | '/verify-email'
    | '/$username/'
    | '/home'
    | '/$username/add'
    | '/$username/edit'
    | '/$username/media'
    | '/$username/posts'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/$username'
    | '/new-password'
    | '/register'
    | '/reset'
    | '/verify-email'
    | '/home'
    | '/$username/add'
    | '/$username/edit'
    | '/$username/media'
    | '/$username/posts'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/$username'
    | '/_authenticated/$username/_layout'
    | '/(auth)/new-password/'
    | '/(auth)/register/'
    | '/(auth)/reset/'
    | '/(auth)/verify-email/'
    | '/_authenticated/$username/'
    | '/_authenticated/home/'
    | '/_authenticated/$username/add/'
    | '/_authenticated/$username/edit/'
    | '/_authenticated/$username/_layout/media/'
    | '/_authenticated/$username/_layout/posts/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  authNewPasswordIndexRoute: typeof authNewPasswordIndexRoute
  authRegisterIndexRoute: typeof authRegisterIndexRoute
  authResetIndexRoute: typeof authResetIndexRoute
  authVerifyEmailIndexRoute: typeof authVerifyEmailIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  authNewPasswordIndexRoute: authNewPasswordIndexRoute,
  authRegisterIndexRoute: authRegisterIndexRoute,
  authResetIndexRoute: authResetIndexRoute,
  authVerifyEmailIndexRoute: authVerifyEmailIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/login",
        "/(auth)/new-password/",
        "/(auth)/register/",
        "/(auth)/reset/",
        "/(auth)/verify-email/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/$username",
        "/_authenticated/home/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authenticated/$username": {
      "filePath": "_authenticated/$username",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/$username/_layout",
        "/_authenticated/$username/",
        "/_authenticated/$username/add/",
        "/_authenticated/$username/edit/"
      ]
    },
    "/_authenticated/$username/_layout": {
      "filePath": "_authenticated/$username/_layout.tsx",
      "parent": "/_authenticated/$username",
      "children": [
        "/_authenticated/$username/_layout/media/",
        "/_authenticated/$username/_layout/posts/"
      ]
    },
    "/(auth)/new-password/": {
      "filePath": "(auth)/new-password/index.tsx"
    },
    "/(auth)/register/": {
      "filePath": "(auth)/register/index.tsx"
    },
    "/(auth)/reset/": {
      "filePath": "(auth)/reset/index.tsx"
    },
    "/(auth)/verify-email/": {
      "filePath": "(auth)/verify-email/index.tsx"
    },
    "/_authenticated/$username/": {
      "filePath": "_authenticated/$username/index.tsx",
      "parent": "/_authenticated/$username"
    },
    "/_authenticated/home/": {
      "filePath": "_authenticated/home/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/$username/add/": {
      "filePath": "_authenticated/$username/add/index.tsx",
      "parent": "/_authenticated/$username"
    },
    "/_authenticated/$username/edit/": {
      "filePath": "_authenticated/$username/edit/index.tsx",
      "parent": "/_authenticated/$username"
    },
    "/_authenticated/$username/_layout/media/": {
      "filePath": "_authenticated/$username/_layout/media/index.tsx",
      "parent": "/_authenticated/$username/_layout"
    },
    "/_authenticated/$username/_layout/posts/": {
      "filePath": "_authenticated/$username/_layout/posts/index.tsx",
      "parent": "/_authenticated/$username/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
